// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.188.0/containers/ubuntu
// manual command: docker build -f Dockerfile -t franzbischoff/false.alarm:stable -t franzbischoff/false.alarm:latest -t franzbischoff/false.alarm:v2.1 --build-arg BUILD_DATE=${TODAY} --build-arg BUILD_VERSION=2.1 .
{
  // "build": {
  //   "args": {
  //     "BUILD_DATE": "${localEnv:date}",
  //     "BUILD_VERSION": "2.1"
  //   },
  //   "dockerfile": "Dockerfile",
  // },
  "image": "franzbischoff/false.alarm:v2.1",
  "containerEnv": {
    "DEBUGME": "R_GlobalEnv",
    "NOT_CRAN": "true",
    "PROFFER_GO_BIN": "/home/docker/go/bin/go",
    "PROFFER_GRAPHVIZ_BIN": "/usr/bin/dot",
    "PROFFER_PPROF_BIN": "/home/docker/go/pkg/tool/linux_amd64/pprof",
    "WORKSPACE_DIRECTORY": "/workspace/false.alarm"
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "affenwiesel.matlab-formatter",
    "alefragnani.project-manager",
    "apommel.matlab-interactive-terminal",
    "bibhasdn.unique-lines",
    "bramvanbilsen.matlab-code-run",
    "christian-kohler.path-intellisense",
    "ms-vscode-remote.remote-wsl-recommender",
    "codezombiech.gitignore",
    "cschleiden.vscode-github-actions",
    "davidanson.vscode-markdownlint",
    "donjayamanne.git-extension-pack",
    "editorconfig.editorconfig",
    "esbenp.prettier-vscode",
    "foxundermoon.shell-format",
    "gabrielgrinberg.auto-run-command",
    "gerane.theme-twilight",
    "gimly81.matlab",
    "github.vscode-pull-request-github",
    "gruntfuggly.todo-tree",
    "guyutongxue.cpp-reference",
    "hbenl.vscode-test-explorer",
    "ikuyadeu.r",
    "james-yu.latex-workshop",
    "lacroixdavid1.vscode-format-context-menu",
    "lukas-tr.materialdesignicons-intellisense",
    "me-dutour-mathieu.vscode-github-actions",
    "meakbiyik.vscode-r-test-adapter",
    "mindaro-dev.file-downloader",
    "ms-azuretools.vscode-docker",
    "ms-vscode.cpptools",
    "ms-vscode.makefile-tools",
    "mutantdino.resourcemonitor",
    "natqe.reload",
    "nhoizey.gremlins",
    "pkief.material-icon-theme",
    "randomfractalsinc.vscode-data-preview",
    "usernamehw.errorlens",
    "rdebugger.r-debugger",
    "redhat.vscode-yaml",
    "richie5um2.vscode-sort-json",
    "spmeesseman.vscode-taskexplorer",
    "spywhere.guides",
    "tht13.html-preview-vscode",
    "timonwong.shellcheck",
    "tyriar.sort-lines",
    "visualstudioexptteam.vscodeintellicode",
    "yzhang.markdown-all-in-one",
    "mechatroner.rainbow-csv",
    "cschlosser.doxdocgen"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    55444
  ],
  "name": "false.alarm dev",
  // "postAttachCommand": "echo postAttachCommand",
  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "uname -a",
  // "postStartCommand": "echo postStartCommand",
  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "docker",
  "runArgs": [
    "--name=false_alarm_dev",
    "-e",
    "GIT_EDITOR=code-insiders",
    "-e",
    "DOCKER_BUILDKIT=1",
    "--privileged"
  ],
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "errorLens.enabledDiagnosticLevels": [
      "error",
      "warning"
    ],
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "gremlins.showInProblemPane": true,
    "projectManager.git.maxDepthRecursion": 1,
    "r.alwaysUseActiveTerminal": true,
    "r.debugger.trackTerminals": true,
    "r.rpath.linux": "/usr/bin/R",
    "r.rterm.linux": "/usr/bin/R",
    "r.sessionWatcher": true,
    "resmon.disk.format": "Remaining",
    "resmon.show.cputemp": true,
    "resmon.show.disk": true,
    "RTestAdapter.RscriptPath": "/usr/bin/Rscript",
    "sortJSON.contextMenu": {
      "sortJSON": false,
      "sortJSONAlphaNum": true,
      "sortJSONAlphaNumReverse": false,
      "sortJSONKeyLength": false,
      "sortJSONKeyLengthReverse": false,
      "sortJSONReverse": false,
      "sortJSONType": true,
      "sortJSONTypeReverse": false,
      "sortJSONValues": true,
      "sortJSONValuesReverse": false
    },
    "taskExplorer.exclude": [
      "**/.vscode-test/**",
      "**/bin/**",
      "**/build/**",
      "**/CompiledOutput/**",
      "**/dist/**",
      "**/doc/**",
      "**/ext/**",
      "**/out/**",
      "**/output/**",
      "**/packages/**",
      "**/release/**",
      "**/releases/**",
      "**/samples/**",
      "**/sdks/**",
      "**/static/**",
      "**/target/**",
      "**/test/**",
      "**/third_party/**",
      "**/vendor/**",
      "**/work/**",
      "**/.history/**",
      "**/.git/**",
      "**/.venv/**",
      "**/renv/**"
    ],
    "taskExplorer.numLastTasks": 3,
    "terminal.integrated.defaultProfile.linux": "bash",
    "terminal.integrated.environmentChangesIndicator": "on",
    // "terminal.integrated.allowWorkspaceConfiguration": true,
    "terminal.integrated.profiles.linux": {
      "bash": {
        "args": [
          "-l"
        ],
        "icon": "terminal-bash",
        "path": "/bin/bash"
      },
      "zsh": {
        "path": "/bin/zsh"
      }
    },
    "terminal.integrated.scrollback": 10000,
    "terminal.integrated.tabs.enabled": true,
    "terminal.integrated.tabs.focusMode": "singleClick",
    "testExplorer.onReload": "retire",
    "testExplorer.onStart": "retire",
    "todo-tree.general.tags": [
      "BUG",
      "HACK",
      "FIXME",
      "TODO",
      "XXX",
      "[ ]",
      "[x]"
    ],
    "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
    "workbench.editorAssociations": {
      "*.bin": "hexEditor.hexedit",
      "*.elf": "hexEditor.hexedit",
      "*.hex": "hexEditor.hexedit",
      "*.ipynb": "jupyter-notebook",
      "git-rebase-todo": "gitlens.rebase"
    }
  },
  "containerUser": "docker",
  "shutdownAction": "stopContainer",
  "workspaceFolder": "/workspace/false.alarm",
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace/false.alarm,type=bind,consistency=cached"
}
